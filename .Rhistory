labs(title = "Gráfico de Barras con Porcentajes", x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No"))
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
plot_politic_1_p <- ggplot(hvs, aes(x = politic_1, y = politic_1_p, fill = politic_1)) +
geom_bar(stat = "identity",  color = "transparent") +
labs(title = "Gráfico de Barras con Porcentajes", x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No"))
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
plot_politic_1_p <- ggplot(hvs, aes(x = politic_1, y = politic_1_p, fill = politic_1)) +
geom_bar(stat = "identity",  color = "transparent") +
labs(title = "Gráfico de Barras con Porcentajes", x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral")
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
plot_politic_1_p <- ggplot(hvs, aes(x = politic_1, y = politic_1_p, fill = politic_1)) +
geom_bar(stat = "identity",  color = "transparent", position = 'dodge') +
labs(title = "Gráfico de Barras con Porcentajes", x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral")
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
plot_politic_1_p <- ggplot(hvs, aes(x = politic_1, y = politic_1_p, fill = politic_1)) +
geom_bar(stat = "identity",  color = "transparent") +
labs(title = "Gráfico de Barras con Porcentajes", x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral")
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
plot_politic_1_p <- ggplot(hvs, aes(x = politic_1, y = politic_1_p, fill = politic_1)) +
geom_bar(stat = "identity",  color = "transparent") +
labs(title = "Gráfico de Barras con Porcentajes", x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral") +
geom_text(aes(label = paste0(porcentaje, "%")), position = "dodge") +
theme(legend.position="none", text = element_text(size = 15))
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
plot_politic_1_p <- ggplot(hvs, aes(x = politic_1, y = politic_1_p, fill = politic_1)) +
geom_bar(stat = "identity",  color = "transparent") +
labs(title = "Gráfico de Barras con Porcentajes", x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral") +
geom_text(aes(label = paste0(politic_1_p, "%")), position = "dodge") +
theme(legend.position="none", text = element_text(size = 15))
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
plot_politic_1_p <- hvs %>%
filter(politic_1 %in% c(1, 2)) %>%
ggplot(aes(x = politic_1, y = politic_1_p, fill = politic_1)) +
geom_bar(stat = "identity",  color = "transparent") +
labs(title = "Gráfico de Barras con Porcentajes", x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral") +
geom_text(aes(label = paste0(politic_1_p, "%")), position = "dodge") +
theme(legend.position="none", text = element_text(size = 15))
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
plot_politic_1_p <- hvs %>%
filter(politic_1 %in% c(1, 2)) %>%
ggplot(aes(x = politic_1, y = politic_1_p, fill = politic_1)) +
geom_bar(stat = "identity",  color = "transparent", width = 0.5) +
labs(title = "Gráfico de Barras con Porcentajes", x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral") +
geom_text(aes(label = paste0(politic_1_p, "%")), position = "dodge") +
theme(legend.position="none", text = element_text(size = 15))
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
plot_politic_1_p <- hvs %>%
filter(politic_1 %in% c(1, 2)) %>%
ggplot(aes(x = politic_1, y = politic_1_p, fill = politic_1)) +
geom_bar(stat = "identity",  color = "transparent", width = 0.5) +
labs(x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral") +
geom_text(aes(label = paste0(politic_1_p, "%"))) +
theme(legend.position="none", text = element_text(size = 15))
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
plot_politic_1_p <- hvs %>%
filter(politic_1 %in% c(1, 2)) %>%
ggplot(aes(x = politic_1, y = politic_1_p, fill = politic_1)) +
geom_bar(stat = "identity",  color = "transparent", width = 0.5) +
labs(x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral") +
geom_text(aes(label = paste0(politic_1_p, "%")), vjust = 'top') +
theme(legend.position="none", text = element_text(size = 15))
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
plot_politic_1_p <- hvs %>%
filter(politic_1 %in% c(1, 2)) %>%
ggplot(aes(x = politic_1, y = politic_1_p, fill = politic_1)) +
geom_bar(stat = "identity",  color = "transparent", width = 0.5) +
labs(x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral") +
geom_text(aes(label = paste0(politic_1_p, "%")), vjust = 'bottom') +
theme(legend.position="none", text = element_text(size = 15))
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
hvs$politic_1_p
load("../input/data/proc/hvs_proc.RData")
hvs$politic_1_p <- as.numeric(as.character(hvs$politic_1))
politic_1_p <- table(datos$hvs$politic_1_p) / length(datos$hvs$politic_1_p) * 100
politic_1_p <- table(hvs$politic_1_p) / length(hvs$politic_1_p) * 100
politic_1_p
df_politic_1_p <- data.frame(
Categoria = names(politic_1_p),
Porcentaje = politic_1_p )
df_politic_1_p
View(df_politic_1_p)
View(df_politic_1_p)
View(df_politic_1_p)
plot_politic_1_p <- df_politic_1_p %>%
filter(Categoria %in% c(1, 2)) %>%
ggplot(aes(x = Categoria, y = Porcentaje.Freq, fill = Categoria)) +
geom_bar(stat = "identity") +
labs(x = "Categoría", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral") +
geom_text(aes(label = paste0(politic_1_p, "%")), vjust = 'bottom') +
theme(legend.position="none", text = element_text(size = 15))
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
plot_politic_1_p <- df_politic_1_p %>%
filter(Categoria %in% c(1, 2)) %>%
ggplot(aes(x = Categoria, y = Porcentaje.Freq, fill = Categoria)) +
geom_bar(stat = "identity") +
labs(x = "Respuesta", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral") +
geom_text(aes(label = paste0(politic_1_p, "%")), vjust = 'bottom') +
theme(legend.position="none", text = element_text(size = 15))
ggsave(plot_politic_1_p, file="../output/graphs/plot_politic_1_p.png", width=10, height=8)
View(hvs)
hvs$politic_2_p <- as.numeric(as.character(hvs$politic_2))
politic_2_p <- table(hvs$politic_2_p) / length(hvs$politic_2_p) * 100
df_politic_2_p <- data.frame(
Categoria = names(politic_2_p),
Porcentaje = politic_2_p)
plot_politic_2_p <- df_politic_2_p %>%
filter(Categoria %in% c(1, 2)) %>%
ggplot(aes(x = Categoria, y = Porcentaje.Freq, fill = Categoria)) +
geom_bar(stat = "identity") +
labs(x = "Respuesta", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral") +
geom_text(aes(label = paste0(politic_1_p, "%")), vjust = 'bottom') +
theme(legend.position="none", text = element_text(size = 15))
ggsave(plot_politic_2_p, file="../output/graphs/plot_politic_2_p.png", width=10, height=8)
View(plot_politic_2_p)
View(plot_politic_2_p)
View(df_politic_2_p)
plot_politic_2_p <- df_politic_2_p %>%
filter(Categoria %in% c(1, 2)) %>%
ggplot(aes(x = Categoria, y = Porcentaje.Freq, fill = Categoria)) +
geom_bar(stat = "identity") +
labs(x = "Respuesta", y = "Porcentaje") +
theme_light() + scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c("Sí", "No")) + scale_fill_brewer(palette = "Spectral") +
geom_text(aes(label = paste0(politic_2_p, "%")), vjust = 'bottom') +
theme(legend.position="none", text = element_text(size = 15))
ggsave(plot_politic_2_p, file="../output/graphs/plot_politic_2_p.png", width=10, height=8)
plot_politic <- sjPlot::plot_stackfrq(dplyr::select(hvs, starts_with("politic_")),
vjust=rep(c("bottom", "top", "bottom", "top"),2),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom")
ggsave(plot_politic, file="../output/graphs/plot_politic.png", width=10, height=8)
plot_politic <- sjPlot::plot_stackfrq(dplyr::select(hvs, politic_1, politic_2)),
# Eliminar los asteriscos de las etiquetas
# Obtener nombres de las columnas con etiquetas
columnas_con_etiquetas <- names(hvs)
# Iterar sobre las columnas
for (col in columnas_con_etiquetas) {
# Verificar si la columna tiene etiquetas
if (has_label(hvs[[col]])) {
# Modificar las etiquetas eliminando los asteriscos
hvs[[col]] <- set_label(hvs[[col]], gsub("\\*", "", label(hvs[[col]])))
}
}
# Imprimir el resultado
get_label(hvs)
plot_politic <- sjPlot::plot_stackfrq(dplyr::select(hvs, politic_1, politic_2),
vjust=rep(c("bottom", "top", "bottom", "top"),2),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom")
ggsave(plot_politic, file="../output/graphs/plot_politic.png", width=10, height=8)
plot_politic <- sjPlot::plot_stackfrq(dplyr::select(hvs, politic_1, politic_2),
vjust=rep(c("bottom", "top"),2),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom")
ggsave(plot_politic, file="../output/graphs/plot_politic.png", width=10, height=8)
plot_politic <- sjPlot::plot_stackfrq(dplyr::select(hvs, politic_1, politic_2),
vjust=rep(c("bottom", "top"),2),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_politic, file="../output/graphs/plot_politic.png", width=10, height=8)
plot_politic <- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_1_1, eei_2_1),
vjust=rep(c("bottom", "top"),2),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_politic, file="../output/graphs/plot_eei_3_1.png", width=10, height=8)
plot_politic <- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_1_1, eei_2_1),
vjust=rep(c("bottom", "top"),2),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
plot_eei_3_1<- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_1_1, eei_2_1),
vjust=rep(c("bottom", "top"),2),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_eei_3_1, file="../output/graphs/plot_eei_3_1.png", width=10, height=8)
plot_eei_3_1<- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_1_1, eei_2_1),
vjust=rep(c("bottom", "top"),2),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_eei_3_1, file="../output/graphs/plot_eei_3_1.png", width=10, height=8)
plot_eei_3_1<- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_1_1, eei_2_1),
vjust=rep(c("bottom", "top"),8),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_eei_3_1, file="../output/graphs/plot_eei_3_1.png", width=10, height=8)
plot_eei_3_1<- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_1_1, eei_2_1),
vjust=rep(c("bottom", "top", "bottom", "top"),8),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_eei_3_1, file="../output/graphs/plot_eei_3_1.png", width=10, height=8)
plot_eei_3_1<- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_1_1, eei_2_1),
vjust=rep(c("bottom", "top", "bottom", "top"),2),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_eei_3_1, file="../output/graphs/plot_eei_3_1.png", width=10, height=8)
plot_hva1 <- sjPlot::plot_stackfrq(dplyr::select(hvs, hva_1, hva_2, hva_3, hva_7),
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE,
vjust=rep(c("bottom", "top", "bottom", "top"),7),
sort.frq = "last.desc"
) +
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_hva1, file="../output/graphs/plot_hva.png", width=10, height=8)
plot_hva1 <- sjPlot::plot_stackfrq(dplyr::select(hvs, hva_1, hva_2, hva_3, hva_7),
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE,
vjust=rep(c("bottom", "top", "bottom", "top"),16),
sort.frq = "last.desc"
) +
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_hva1, file="../output/graphs/plot_hva.png", width=10, height=8)
plot_hva1 <- sjPlot::plot_stackfrq(dplyr::select(hvs, hva_1, hva_2, hva_3, hva_7),
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE,
vjust=rep(c("bottom", "top", "bottom", "top"),4),
sort.frq = "last.desc"
) +
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
plot_hva1
plot_hva1
ggsave(plot_hva1, file="../output/graphs/plot_hva.png", width=10, height=8)
ggsave(plot_hva1, file="../output/graphs/plot_hva1.png", width=10, height=8)
plot_hva2 <- sjPlot::plot_stackfrq(dplyr::select(hvs, hva_4, hva_5, hva_6),
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE,
vjust=rep(c("bottom", "top", "bottom", "top"),1),
sort.frq = "last.desc"
) +
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_hva2, file="../output/graphs/plot_hva2.png", width=10, height=8)
plot_hva2 <- sjPlot::plot_stackfrq(dplyr::select(hvs, hva_4, hva_5, hva_6),
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE,
vjust=rep(c("bottom", "top", "bottom", "top"),3),
sort.frq = "last.desc"
) +
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_hva2, file="../output/graphs/plot_hva2.png", width=10, height=8)
plot_ha1 <- sjPlot::plot_stackfrq(dplyr::select(hvs, ha_1, ha_2, ha_3, ha_9),
vjust=rep(c("bottom", "top", "bottom", "top"),2),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_ha1_1, file="../output/graphs/plot_ha1_1.png", width=10, height=8)
plot_ha1_1 <- sjPlot::plot_stackfrq(dplyr::select(hvs, ha_1, ha_2, ha_3, ha_9),
vjust=rep(c("bottom", "top", "bottom", "top"),2),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_ha1_1, file="../output/graphs/plot_ha1_1.png", width=10, height=8)
plot_ha1_1 <- sjPlot::plot_stackfrq(dplyr::select(hvs, ha_1, ha_2, ha_3, ha_9),
vjust=rep(c("bottom", "top", "bottom", "top"),4),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_ha1_1, file="../output/graphs/plot_ha1_1.png", width=10, height=8)
plot_ha1_2 <- sjPlot::plot_stackfrq(dplyr::select(hvs, ha_4, ha_5, ha_6, ha_7, ha_8),
vjust=rep(c("bottom", "top", "bottom", "top"),4),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
plot_ha1_2
plot_ha1_2 <- sjPlot::plot_stackfrq(dplyr::select(hvs, ha_4, ha_5, ha_6, ha_7, ha_8),
vjust=rep(c("bottom", "top", "bottom", "top"),5),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_ha1_2, file="../output/graphs/plot_ha1_2.png", width=10, height=8)
plot_eei2_1 <- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_3, eei_4, eei_5, eei_6),
vjust=rep(c("bottom", "top", "bottom", "top"),4),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE,
)+
theme_light(base_size = 16) +
theme(legend.position="bottom")
ggsave(plot_eei2_1, file="../output/graphs/plot_eei2_1.png", width=10, height=8)
plot_eei2_2 <- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_7, eei_8),
vjust=rep(c("bottom", "top"),1),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE,
)+
theme_light(base_size = 14) +
theme(legend.position="bottom")
ggsave(plot_eei2_2, file="../output/graphs/plot_eei2_2.png", width=10, height=8)
plot_eei2_2 <- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_7, eei_8),
vjust=rep(c("bottom", "top", "bottom", "top"),2),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE,
)+
theme_light(base_size = 14) +
theme(legend.position="bottom")
ggsave(plot_eei2_2, file="../output/graphs/plot_eei2_2.png", width=10, height=8)
plot_eei2_3 <- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_9, eei_10, eei_11, eei_12),
vjust=rep(c("bottom", "top", "bottom", "top"),2),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE,
)+
theme_light(base_size = 14) +
theme(legend.position="bottom")
ggsave(plot_eei2_3, file="../output/graphs/plot_eei2_3.png", width=10, height=8)
plot_eei2_3 <- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_9, eei_10, eei_11, eei_12),
vjust=rep(c("bottom", "top", "bottom", "top"),4),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE,
)+
theme_light(base_size = 14) +
theme(legend.position="bottom")
ggsave(plot_eei2_3, file="../output/graphs/plot_eei2_3.png", width=10, height=8)
plot_eei2_2 <- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_7, eei_8),
vjust=rep(c("bottom", "top", "bottom", "top"),2),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE,
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_eei2_2, file="../output/graphs/plot_eei2_2.png", width=10, height=8)
plot_eei2_3 <- sjPlot::plot_stackfrq(dplyr::select(hvs, eei_9, eei_10, eei_11, eei_12),
vjust=rep(c("bottom", "top", "bottom", "top"),4),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE,
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_eei2_3, file="../output/graphs/plot_eei2_3.png", width=10, height=8)
plot_ha2 <- sjPlot::plot_stackfrq(dplyr::select(hvs, ha_10, ha_11),
vjust=rep(c("bottom", "top", "bottom", "top"),2),
expand.grid =TRUE,
sort.frq = "last.desc",
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position = "bottom", text = element_text(size = 15))
ggsave(plot_ha2, file="../output/graphs/plot_ha2.png", width=10, height=8)
plot_ge <- sjPlot::plot_stackfrq(dplyr::select(hvs, starts_with("ge_")),
vjust=rep(c("bottom", "top", "bottom", "top"),4),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 15))
ggsave(plot_ge, file="../output/graphs/plot_ge.png")
plot_ge <- sjPlot::plot_stackfrq(dplyr::select(hvs, starts_with("ge_")),
vjust=rep(c("bottom", "top", "bottom", "top"),4),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 14))
ggsave(plot_ge, file="../output/graphs/plot_ge.png")
plot_ge <- sjPlot::plot_stackfrq(dplyr::select(hvs, starts_with("ge_")),
vjust=rep(c("bottom", "top", "bottom", "top"),4),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 10))
ggsave(plot_ge, file="../output/graphs/plot_ge.png")
plot_ge <- sjPlot::plot_stackfrq(dplyr::select(hvs, starts_with("ge_")),
vjust=rep(c("bottom", "top", "bottom", "top"),4),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 12))
ggsave(plot_ge, file="../output/graphs/plot_ge.png")
plot_ge <- sjPlot::plot_stackfrq(dplyr::select(hvs, starts_with("ge_")),
vjust=rep(c("bottom", "top", "bottom", "top"),4),
sort.frq = "last.desc",
expand.grid =TRUE,
geom.colors = 'Spectral',
show.total = FALSE
)+
theme_light() +
theme(legend.position="bottom", text = element_text(size = 11))
ggsave(plot_ge, file="../output/graphs/plot_ge.png")
